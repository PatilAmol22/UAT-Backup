<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Case_Status_Update_Alert_to_Owner</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_12_A1</name>
        <label>Send status update to owner</label>
        <locationX>1200</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Case_Status_Update_Alert_to_Owner</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>myWait_myRule_12</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Case_Close_Alert</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_14_A1</name>
        <label>Send case close update to owner</label>
        <locationX>1400</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Case_Close_Alert</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Case_Quality_Alert</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_4_A1</name>
        <label>Email Alert To Quality</label>
        <locationX>400</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Case_Quality_Alert</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>myDecision5</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Case_Status_Update_Alert</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_8_A1</name>
        <label>Send status update notification</label>
        <locationX>800</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Case_Status_Update_Alert</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>myWait_myRule_8</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Escalation_Alert</stringValue>
            </value>
        </processMetadataValues>
        <name>myWaitEvent_myWait_myRule_12_event_0_SA1</name>
        <label>Send Notification to immediate manager</label>
        <locationX>1200</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Escalation_Alert</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>myWaitEvent_myWait_myRule_12_event_0_postWaitExecutionAssignment</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Escalation_Alert</stringValue>
            </value>
        </processMetadataValues>
        <name>myWaitEvent_myWait_myRule_6_event_0_SA1</name>
        <label>Send Escalation Notification</label>
        <locationX>600</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Escalation_Alert</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>myWaitEvent_myWait_myRule_6_event_0_postWaitExecutionAssignment</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <processMetadataValues>
            <name>emailAlertSelection</name>
            <value>
                <stringValue>NAM_Escalation_Alert_To_Finance_CS</stringValue>
            </value>
        </processMetadataValues>
        <name>myWaitEvent_myWait_myRule_8_event_0_SA1</name>
        <label>Send Notification to Finance and CS group</label>
        <locationX>800</locationX>
        <locationY>200</locationY>
        <actionName>Case.NAM_Escalation_Alert_To_Finance_CS</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>myWaitEvent_myWait_myRule_8_event_0_postWaitExecutionAssignment</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>myWaitAssignment_myWait_myRule_10</name>
        <label>myWaitAssignment_myWait_myRule_10</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>cancelWaits</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>myWait_myRule_10</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myPreWaitDecision_myWait_myRule_8</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitAssignment_myWait_myRule_12</name>
        <label>myWaitAssignment_myWait_myRule_12</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>cancelWaits</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>myWait_myRule_12</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myPreWaitDecision_myWait_myRule_10</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitAssignment_myWait_myRule_6</name>
        <label>myWaitAssignment_myWait_myRule_6</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>cancelWaits</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>myWait_myRule_6</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitAssignment_myWait_myRule_8</name>
        <label>myWaitAssignment_myWait_myRule_8</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>cancelWaits</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>myWait_myRule_8</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myPreWaitDecision_myWait_myRule_6</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitEvent_myWait_myRule_10_event_0_postWaitExecutionAssignment</name>
        <label>myWaitEvent_myWait_myRule_10_event_0_postWaitExecutionAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myWaitEvent_myWait_myRule_10_event_0_postActionExecutionVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myWait_myRule_10</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitEvent_myWait_myRule_12_event_0_postWaitExecutionAssignment</name>
        <label>myWaitEvent_myWait_myRule_12_event_0_postWaitExecutionAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myWaitEvent_myWait_myRule_12_event_0_postActionExecutionVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myWait_myRule_12</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitEvent_myWait_myRule_6_event_0_postWaitExecutionAssignment</name>
        <label>myWaitEvent_myWait_myRule_6_event_0_postWaitExecutionAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myWaitEvent_myWait_myRule_6_event_0_postActionExecutionVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myWait_myRule_6</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>myWaitEvent_myWait_myRule_8_event_0_postWaitExecutionAssignment</name>
        <label>myWaitEvent_myWait_myRule_8_event_0_postWaitExecutionAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myWaitEvent_myWait_myRule_8_event_0_postActionExecutionVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myWait_myRule_8</targetReference>
        </connector>
    </assignments>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision</name>
        <label>myDecision</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision3</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_1</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_1_pmetdec</targetReference>
            </connector>
            <label>Populate Escalation email field</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>5.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision11</name>
        <label>myDecision11</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision13</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_12</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_12</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_12_pmetdec</targetReference>
            </connector>
            <label>Case in Executed in SAP status</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>6.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision13</name>
        <label>myDecision13</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_14</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_14</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_14_pmetdec</targetReference>
            </connector>
            <label>Case in Closed Status</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision3</name>
        <label>myDecision3</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision5</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_4</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_4</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_4_A1</targetReference>
            </connector>
            <label>NAM Quality Case Email Alert</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>2.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision5</name>
        <label>myDecision5</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision7</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_6</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_6</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_6_pmetdec</targetReference>
            </connector>
            <label>Case in Submitted status</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>3.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision7</name>
        <label>myDecision7</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision9</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_8</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_8</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_8_pmetdec</targetReference>
            </connector>
            <label>Case in Approved Status</label>
        </rules>
    </decisions>
    <decisions>
        <processMetadataValues>
            <name>index</name>
            <value>
                <numberValue>4.0</numberValue>
            </value>
        </processMetadataValues>
        <name>myDecision9</name>
        <label>myDecision9</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myDecision11</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_10</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_10</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_10_pmetdec</targetReference>
            </connector>
            <label>Case in Rejected Status</label>
        </rules>
    </decisions>
    <decisions>
        <name>myPreWaitDecision_myWait_myRule_10</name>
        <label>myPreWaitDecision_myWait_myRule_10</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myWaitAssignment_myWait_myRule_10</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myPreWaitRule_myWait_myRule_10</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_10</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myPreWaitDecision_myWait_myRule_8</targetReference>
            </connector>
            <label>myPreWaitRule_myWait_myRule_10</label>
        </rules>
    </decisions>
    <decisions>
        <name>myPreWaitDecision_myWait_myRule_12</name>
        <label>myPreWaitDecision_myWait_myRule_12</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myWaitAssignment_myWait_myRule_12</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myPreWaitRule_myWait_myRule_12</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_12</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myPreWaitDecision_myWait_myRule_10</targetReference>
            </connector>
            <label>myPreWaitRule_myWait_myRule_12</label>
        </rules>
    </decisions>
    <decisions>
        <name>myPreWaitDecision_myWait_myRule_6</name>
        <label>myPreWaitDecision_myWait_myRule_6</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myWaitAssignment_myWait_myRule_6</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myPreWaitRule_myWait_myRule_6</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_6</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myDecision</targetReference>
            </connector>
            <label>myPreWaitRule_myWait_myRule_6</label>
        </rules>
    </decisions>
    <decisions>
        <name>myPreWaitDecision_myWait_myRule_8</name>
        <label>myPreWaitDecision_myWait_myRule_8</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>myWaitAssignment_myWait_myRule_8</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myPreWaitRule_myWait_myRule_8</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_8</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myPreWaitDecision_myWait_myRule_6</targetReference>
            </connector>
            <label>myPreWaitRule_myWait_myRule_8</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_10_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>1000</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myWait_myRule_10</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_10_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWait_myRule_10</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_10_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_10_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_12_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>1200</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myRule_12_A1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_12_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_12_A1</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_12_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_12_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_14_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>1400</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myRule_14_A1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_14_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_14_A1</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_14_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_14_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_1_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>100</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myRule_1_A1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_1_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_1_A1</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_1_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_1_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myDecision3</targetReference>
            </connector>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_6_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>600</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myWait_myRule_6</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_6_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWait_myRule_6</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_6_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_6_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <decisions>
        <name>myRule_8_pmetdec</name>
        <label>Previously Met Decision</label>
        <locationX>800</locationX>
        <locationY>100</locationY>
        <defaultConnector>
            <targetReference>myRule_8_A1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Previously Met</defaultConnectorLabel>
        <rules>
            <name>myRule_8_pmetnullrule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>myVariable_old</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_8_A1</targetReference>
            </connector>
            <label>Previously Met - Null</label>
        </rules>
        <rules>
            <name>myRule_8_pmetrule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_8_pmetrule</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Previously Met - Prev</label>
        </rules>
    </decisions>
    <description>Update for RITM0488211 on 11-01-2023  Update 3rd Node and added condition to not send email alert when RecordType = Complaint and Settlement type = Cash</description>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>IF(NOT(ISBLANK([Case].Owner:User.ManagerId )),[Case].Owner:User.Manager.Email,&apos; &apos;) </stringValue>
            </value>
        </processMetadataValues>
        <name>formula_2_myRule_1_A1_1492190896</name>
        <dataType>String</dataType>
        <expression>IF(NOT(ISBLANK({!myVariable_current.Owner:User.ManagerId} )),{!myVariable_current.Owner:User.Manager.Email},&apos; &apos;)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_1</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	IF(
	OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_current.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
		OR(
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Rejected&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_10</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_current.Status}, &apos;Rejected&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_current.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
		OR(
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Rejected&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_10_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_old.Status}, &apos;Rejected&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_old.ContactId})),NOT(ISBLANK({!myVariable_old.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_old.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_old.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_old.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_old.AccountId})),IF(NOT(ISBLANK({!myVariable_old.Account.Sales_Org__c})),
		OR(
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Executed In SAP&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_12</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_current.Status}, &apos;Executed In SAP&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_current.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
		OR(
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Executed In SAP&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_12_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_old.Status}, &apos;Executed In SAP&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_old.ContactId})),NOT(ISBLANK({!myVariable_old.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_old.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_old.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_old.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_old.AccountId})),IF(NOT(ISBLANK({!myVariable_old.Account.Sales_Org__c})),
		OR(
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Closed&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_14</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_current.Status}, &apos;Closed&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_current.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
		OR(
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Closed&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_14_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_old.Status}, &apos;Closed&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_old.ContactId})),NOT(ISBLANK({!myVariable_old.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_old.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_old.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_old.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_old.AccountId})),IF(NOT(ISBLANK({!myVariable_old.Account.Sales_Org__c})),
		OR(
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_1_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	IF(
	OR(NOT(ISBLANK({!myVariable_old.ContactId})),NOT(ISBLANK({!myVariable_old.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_old.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_old.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_old.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_old.AccountId})),IF(NOT(ISBLANK({!myVariable_old.Account.Sales_Org__c})),
		OR(
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND( 
    [Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
    ISPICKVAL([Case].Complaint_Type__c, &apos;Formulation Quality&apos;),
    ISCHANGED([Case].Status),
    ISPICKVAL([Case].Status, &apos;Submitted&apos;), 
    
    IF(
        OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
        IF(NOT(ISBLANK([Case].ContactId)),
        
            IF(NOT(ISBLANK([Case].Contact.AccountId)),
                IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
                OR(
                 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
                 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
                ),false),
                false
            ),
            
            IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
            OR(
                 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
                 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
                ),false),
                false
            )
        ),
        false
    )
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_4</name>
        <dataType>Boolean</dataType>
        <expression>AND( 
    {!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
    ISPICKVAL({!myVariable_current.Complaint_Type__c}, &apos;Formulation Quality&apos;),
    ISCHANGED({!myVariable_current.Status}),
    ISPICKVAL({!myVariable_current.Status}, &apos;Submitted&apos;), 
    
    IF(
        OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
        IF(NOT(ISBLANK({!myVariable_current.ContactId})),
        
            IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
                IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
                OR(
                 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
                 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
                ),false),
                false
            ),
            
            IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
            OR(
                 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
                 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
                ),false),
                false
            )
        ),
        false
    )
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Submitted&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_6</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_current.Status}, &apos;Submitted&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_current.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
		OR(
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Submitted&apos;), 
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_6_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_old.Status}, &apos;Submitted&apos;), 
	IF(
	OR(NOT(ISBLANK({!myVariable_old.ContactId})),NOT(ISBLANK({!myVariable_old.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_old.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_old.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_old.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_old.AccountId})),IF(NOT(ISBLANK({!myVariable_old.Account.Sales_Org__c})),
		OR(
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Approved&apos;),
	IF([Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint &amp;&amp; 
			ISPICKVAL([Case].Settlement_Type__c , &apos;Cash&apos;), 
	false,
	true
	),
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_8</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_current.Status}, &apos;Approved&apos;),
	IF({!myVariable_current.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint} &amp;&amp; 
			ISPICKVAL({!myVariable_current.Settlement_Type__c} , &apos;Cash&apos;), 
	false,
	true
	),
	IF(
	OR(NOT(ISBLANK({!myVariable_current.ContactId})),NOT(ISBLANK({!myVariable_current.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_current.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_current.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_current.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_current.AccountId})),IF(NOT(ISBLANK({!myVariable_current.Account.Sales_Org__c})),
		OR(
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_current.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>AND(
	OR(
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_CSR,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_FOC ,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Sample,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint,
		[Case].RecordType.DeveloperName = $Label.Case_RecordType_Product_Swap 
	),  
	ISPICKVAL([Case].Status, &apos;Approved&apos;),
	IF([Case].RecordType.DeveloperName = $Label.Case_RecordType_Complaint &amp;&amp; 
			ISPICKVAL([Case].Settlement_Type__c , &apos;Cash&apos;), 
	false,
	true
	),
	IF(
	OR(NOT(ISBLANK([Case].ContactId)),NOT(ISBLANK([Case].AccountId))),
	IF(NOT(ISBLANK([Case].ContactId)),
	
		IF(NOT(ISBLANK([Case].Contact.AccountId)),
			IF(NOT(ISBLANK([Case].Contact.Account.Sales_Org__c )),
			OR(
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Contact.Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		),
		
		IF(NOT(ISBLANK([Case].AccountId)),IF(NOT(ISBLANK([Case].Account.Sales_Org__c)),
		OR(
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.NAM_SalesOrg ,
			 [Case].Account.Sales_Org__r.Sales_Org_Code__c = $Label.Canada_SalesOrg
			),false),
			false
		)
	),
	false
	)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_8_pmetrule</name>
        <dataType>Boolean</dataType>
        <expression>AND(
	OR(
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_CSR},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_FOC} ,
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Sample},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint},
		{!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Product_Swap} 
	),  
	ISPICKVAL({!myVariable_old.Status}, &apos;Approved&apos;),
	IF({!myVariable_old.RecordType.DeveloperName} = {!$Label.Case_RecordType_Complaint} &amp;&amp; 
			ISPICKVAL({!myVariable_old.Settlement_Type__c} , &apos;Cash&apos;), 
	false,
	true
	),
	IF(
	OR(NOT(ISBLANK({!myVariable_old.ContactId})),NOT(ISBLANK({!myVariable_old.AccountId}))),
	IF(NOT(ISBLANK({!myVariable_old.ContactId})),
	
		IF(NOT(ISBLANK({!myVariable_old.Contact.AccountId})),
			IF(NOT(ISBLANK({!myVariable_old.Contact.Account.Sales_Org__c} )),
			OR(
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Contact.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		),
		
		IF(NOT(ISBLANK({!myVariable_old.AccountId})),IF(NOT(ISBLANK({!myVariable_old.Account.Sales_Org__c})),
		OR(
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.NAM_SalesOrg} ,
			 {!myVariable_old.Account.Sales_Org__r.Sales_Org_Code__c} = {!$Label.Canada_SalesOrg}
			),false),
			false
		)
	),
	false
	)
)</expression>
    </formulas>
    <interviewLabel>NAM_Case_Escalation_Process-3_InterviewLabel</interviewLabel>
    <label>NAM Case Escalation and Notification Process</label>
    <processMetadataValues>
        <name>ObjectType</name>
        <value>
            <stringValue>Case</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>ObjectVariable</name>
        <value>
            <elementReference>myVariable_current</elementReference>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OldObjectVariable</name>
        <value>
            <elementReference>myVariable_old</elementReference>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>TriggerType</name>
        <value>
            <stringValue>onAllChanges</stringValue>
        </value>
    </processMetadataValues>
    <processType>Workflow</processType>
    <recordUpdates>
        <processMetadataValues>
            <name>evaluationType</name>
            <value>
                <stringValue>always</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>extraTypeInfo</name>
        </processMetadataValues>
        <processMetadataValues>
            <name>isChildRelationship</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>reference</name>
            <value>
                <stringValue>[Case]</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>referenceTargetField</name>
        </processMetadataValues>
        <name>myRule_1_A1</name>
        <label>Populate Email Field</label>
        <locationX>100</locationX>
        <locationY>200</locationY>
        <connector>
            <targetReference>myDecision3</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <processMetadataValues>
                <name>implicit</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </processMetadataValues>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <processMetadataValues>
                <name>dataType</name>
                <value>
                    <stringValue>String</stringValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>isRequired</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>leftHandSideLabel</name>
                <value>
                    <stringValue>Escalation Email</stringValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>leftHandSideReferenceTo</name>
                <value>
                    <stringValue></stringValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>rightHandSideType</name>
                <value>
                    <stringValue>Formula</stringValue>
                </value>
            </processMetadataValues>
            <field>Escalation_Email__c</field>
            <value>
                <elementReference>formula_2_myRule_1_A1_1492190896</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <processMetadataValues>
            <name>evaluationType</name>
            <value>
                <stringValue>always</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>extraTypeInfo</name>
        </processMetadataValues>
        <processMetadataValues>
            <name>isChildRelationship</name>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>reference</name>
            <value>
                <stringValue>[Case]</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>referenceTargetField</name>
        </processMetadataValues>
        <name>myWaitEvent_myWait_myRule_10_event_0_SA1</name>
        <label>Case is Closed</label>
        <locationX>1000</locationX>
        <locationY>200</locationY>
        <connector>
            <targetReference>myWaitEvent_myWait_myRule_10_event_0_postWaitExecutionAssignment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <processMetadataValues>
                <name>implicit</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </processMetadataValues>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>myVariable_current.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <processMetadataValues>
                <name>dataType</name>
                <value>
                    <stringValue>Picklist</stringValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>isRequired</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>leftHandSideLabel</name>
                <value>
                    <stringValue>Status</stringValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>leftHandSideReferenceTo</name>
                <value>
                    <stringValue></stringValue>
                </value>
            </processMetadataValues>
            <processMetadataValues>
                <name>rightHandSideType</name>
                <value>
                    <stringValue>Picklist</stringValue>
                </value>
            </processMetadataValues>
            <field>Status</field>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <startElementReference>myPreWaitDecision_myWait_myRule_12</startElementReference>
    <status>Active</status>
    <variables>
        <name>cancelWaits</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>myVariable_current</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>myVariable_old</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>myWaitEvent_myWait_myRule_10_event_0_postActionExecutionVariable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>myWaitEvent_myWait_myRule_12_event_0_postActionExecutionVariable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>myWaitEvent_myWait_myRule_6_event_0_postActionExecutionVariable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>myWaitEvent_myWait_myRule_8_event_0_postActionExecutionVariable</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <waits>
        <name>myWait_myRule_10</name>
        <label>myWait_myRule_10</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>defaultLabel</defaultConnectorLabel>
        <waitEvents>
            <processMetadataValues>
                <name>inputParameterType</name>
                <value>
                    <stringValue>now</stringValue>
                </value>
            </processMetadataValues>
            <name>myWaitEvent_myWait_myRule_10_event_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>myWaitEvent_myWait_myRule_10_event_0_postActionExecutionVariable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWaitEvent_myWait_myRule_10_event_0_SA1</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>$Flow.InterviewStartTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>24.0</numberValue>
                </value>
            </inputParameters>
            <label>myWaitEvent_myWait_myRule_10_event_0</label>
        </waitEvents>
    </waits>
    <waits>
        <name>myWait_myRule_12</name>
        <label>myWait_myRule_12</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>defaultLabel</defaultConnectorLabel>
        <waitEvents>
            <processMetadataValues>
                <name>inputParameterType</name>
                <value>
                    <stringValue>now</stringValue>
                </value>
            </processMetadataValues>
            <name>myWaitEvent_myWait_myRule_12_event_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>myWaitEvent_myWait_myRule_12_event_0_postActionExecutionVariable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWaitEvent_myWait_myRule_12_event_0_SA1</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>$Flow.InterviewStartTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>48.0</numberValue>
                </value>
            </inputParameters>
            <label>myWaitEvent_myWait_myRule_12_event_0</label>
        </waitEvents>
    </waits>
    <waits>
        <name>myWait_myRule_6</name>
        <label>myWait_myRule_6</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>defaultLabel</defaultConnectorLabel>
        <waitEvents>
            <processMetadataValues>
                <name>inputParameterType</name>
                <value>
                    <stringValue>now</stringValue>
                </value>
            </processMetadataValues>
            <name>myWaitEvent_myWait_myRule_6_event_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>myWaitEvent_myWait_myRule_6_event_0_postActionExecutionVariable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWaitEvent_myWait_myRule_6_event_0_SA1</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>$Flow.InterviewStartTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>48.0</numberValue>
                </value>
            </inputParameters>
            <label>myWaitEvent_myWait_myRule_6_event_0</label>
        </waitEvents>
    </waits>
    <waits>
        <name>myWait_myRule_8</name>
        <label>myWait_myRule_8</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>defaultLabel</defaultConnectorLabel>
        <waitEvents>
            <processMetadataValues>
                <name>inputParameterType</name>
                <value>
                    <stringValue>now</stringValue>
                </value>
            </processMetadataValues>
            <name>myWaitEvent_myWait_myRule_8_event_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>myWaitEvent_myWait_myRule_8_event_0_postActionExecutionVariable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myWaitEvent_myWait_myRule_8_event_0_SA1</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>$Flow.InterviewStartTime</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>48.0</numberValue>
                </value>
            </inputParameters>
            <label>myWaitEvent_myWait_myRule_8_event_0</label>
        </waitEvents>
    </waits>
</Flow>
